.intro {
  height: 500px;
  background: url('/imges/intro-bg.jpg');
  background-size: cover;
  background-position: center;
  position: relative;
  /* 높이는 500px, 백그라운드 url로 이미지 불러오기,
  백그라운드 사이즈는 cover 전체 덮기, 이미지 중앙에 맞추려고 포지션 센터값, 포지션 렐러티브로 .intro를 기준으로 아래오는 요소들의 기준점이 됨 */
}
.intro_dark {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.6);
  text-align: center;
  /* 포지션은 부모요소인 .intro를 기준으로 움직이고 위로부터 0, 아래로부터 0, 왼쪽으로 부터 0, 오른쪽으로 부터 0, 한마디로 상하좌우 다 붙어있다는 뜻, 컬러는 rgba 알파 값에 0.6(1을 주면 검은색으로 다 덮는다), 텍스는 중앙에 위치시킴 */
}
.intro-type {
  display: inline-flex;
  gap: 0.3em;
  font-family: var(--font-code);
  font-size: 2.8em;
  font-weight: bold;
  color: #fff;
  /* 마진으로 중간 맞추기 */
  margin-top: 200px;
  align-items: center;
  /* 디스플레이 인라인플렉스는 인라인블럭과 비슷하다. 반응형을 만들땐
  플렉스를 쓰지, 거의 쓰이지는 않는다, 갭은 '코딩이'와'즐거워진다' 사이의 간격을 주기위해 gap을썻다 gap은 주로 flex속성에서 많이 쓰인다, 위에서 text-alig:center로 중앙을 맞췄고 아래로만 내리면 돼서 마진 탑 200px을 줬다 텍스트를 수평정렬 하기위해 align-item을 썻다 */
}
.underscore {
  animation: blink 0.75s infinite;
  /* 애니메이션 이름, 몇초간격으로, 무한반복 */
}
@keyframes blink {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
  /* 애니메이션 동작을 만들려면 @keyframes를 쓰고 이름을 지정해 주고
  0 ~ 100 동안 어떤 요소를 지정해 준다 이때, 0% 또는 from, 100% 또는 to를 쓴다. 0% 에서는 불투명도 0값(안보임), 100%에서는 불투명도 1값 100%일때 보인다   */
}
div[class^="intro_title"] {
  position: absolute;
  bottom: 0; left: 0;
  width: 100%;
  height: 25%;
  background-color: var(--color-main);
  clip-path: polygon(0 42%, 100% 85%, 100% 100%, 0 100%);
  /* div 클레스 값으로 intro_title로 시작하는 div를 선택하는 방법
  클레스 intro_title로 시작하는 애들 잡아라~, 부모인 .intro를 기준으로 그안에서 위치를 지정한다. 아래와 왼쪽에 붙는다 너비는 할당받은 공간을 모두 다쓴다 높이는 할당받은 공간에서 25%를 쓴다
  클립패스는 https://bennettfeely.com/clippy/ 여기가서 위치 잡고 복붙  */
}
div.intro_title--flip {
  clip-path: polygon(0 84%, 100% 27%, 100% 100%, 0% 100%);
  opacity: 0.5;
  /* 여기 클립패스는 위에 있는 사이트에 들어가서 반대 모양 만든후 복붙
  불투명도는 0.5값이다 */
}